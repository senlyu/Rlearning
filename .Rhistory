View(BinaryPred)
getwd()
Bi = read.csv("/User/senlyu/Session\ 3/Data/BinaryPred.csv")
Bi = read.csv("/Users/senlyu/Session\ 3/Data/BinaryPred.csv")
Bi = read.csv("/Users/senlyu/Desktop/Session\ 3/Data/BinaryPred.csv")
getwd()
Bi = read.csv("/Users/senlyu/Desktop/Session\ 3/Data/BinaryPred.csv")
a = Bi$Target
m = Bi$Model1
k = 10
metrics = c(LL=0,AIC=0,BIC=0,R2=0)
metrics["LL"] = sum(ifelse(a==1,log(m),log(1-m)))
metrics["AIC"] = -2*metrics["LL"]+2*k
metrics["BIC"] = -2*metrics["LL"]+2*k*log(length(a))
sst = sum((a-mean(a))^2)
sse = sum((a-m)^2)
metrics["R2"] = 1 - (sse/sst)
metrics
bin(a=Bi$Target,m=Bi$Model1)
bin(a=Bi$Target,m=Bi$Model2)
bin = function(a,m,k=10)
{
metrics = c(LL=0,AIC=0,BIC=0,R2=0)
metrics["LL"] = sum(ifelse(a==1,log(m),log(1-m)))
metrics["AIC"] = -2*metrics["LL"]+2*k
metrics["BIC"] = -2*metrics["LL"]+2*k*log(length(a))
sst = sum((a-mean(a))^2)
sse = sum((a-m)^2)
metrics["R2"] = 1 - (sse/sst)
return(metrics)
}
bin(a=Bi$Target,m=Bi$Model1)
bin(a=Bi$Target,m=Bi$Model2)
setwd("/Users/senlyu/classnote-Rlearning/")
dump('f1',file = 'myfunctions.R',append = TRUE)
ifelse(0,1,2)
ifelse(-1,1,2)
ifelse(1,1,2)
mnew = ifelse(m-p>0,1,0)
p = 0.7
mnew = ifelse(m-p>0,1,0)
x = table(factor(mnew),factor(a))
x
vec = as.vector(x)
vec
vec = c(p,vec)
cev
vec
table(a,m)
cutoff = seq(min(m),max(m),by = incre)
incre = 0.05
cutoff = seq(min(m),max(m),by = incre)
mresult = data.frame()
mnew = ifelse(m-p>0,1,0)
mnew = ifelse(m-p,1,0)
x = table(factor(mnew),factor(a))
x
mnew = ifelse(m>p,1,0)
ifelse(-1,1,2)
ifelse(1,1,2)
x = table(factor(mnew),factor(a))
x
incre = 0.05
cutoff = seq(min(m),max(m),by = incre)
mresult = data.frame()
for (p in cutoff)
{
mnew = ifelse(m-p>0,1,0)
x = table(factor(mnew),factor(a))
vec = as.vector(x)
vec = c(p,vec)
mresult = rbind(mresult,vec)
}
mresult = data.frame()
for (p in cutoff)
{
mnew = ifelse(m-p>0,1,0)
x = table(factor(mnew),factor(a))
vec = as.vector(x)
vec = c(p,vec)
mresult = rbind(mresult,vec)
}
colnames(mresult) = c("cutoff","TN","FP","FN","TP")
View(mresult)
xyz = function(a,m,incre=0.05)
{
cutoff = seq(min(m),max(m),by = incre)
mresult = data.frame()
for (p in cutoff)
{
mnew = ifelse(m-p>0,1,0)
x = table(factor(mnew),factor(a))
vec = as.vector(x)
vec = c(p,vec)
mresult = rbind(mresult,vec)
}
colnames(mresult) = c("cutoff","TN","FP","FN","TP")
return(mresult)
}
setwd("/Users/senlyu/classnote-Rlearning/")
dump('f1',file = 'myfunctions.R',append = TRUE)
dump('f1',file = 'myfunctions.R',append = TRUE)
dump('f2',file = 'myfunctions.R',append = TRUE)
dump('f3',file = 'myfunctions.R',append = TRUE)
dump('function2',file = 'myfunctions.R',append = TRUE)
dump('function3',file = 'myfunctions.R',append = TRUE)
dump('bin',file = 'myfunctions.R',append = TRUE)
dump('xyz',file = 'myfunctions.R',append = TRUE)
x = xyz(a=Bi$Target,m=Bi$Model2)
x
y1 = x$TP/max(x$TP)
x1 = x$FP/max(x$FP)
y1 = x$TP/max(x$TP)
plot(x1,y1,type="1")
plot(x1,y1,type="]")
plot(x1,y1,type="|")
plot(x1,y1,type="l")
cutoff.length
length(cutoff)
cutoff[1:10]
x=10
cutoff[1:x]
x1=1
x2=10
cutoff[x1:x2]
x1=9
x2=10
cutoff[x1:x2]
a = sample(1:6,2,replace = TRUE)
a = sample(1:6,2,replace = TRUE)
a = sample(1:6,2,replace = TRUE)
a[1] == a[2]
a = sample(1:6,2,replace = TRUE)
a[1] == a[2]
a = sample(1:6,2,replace = TRUE)
a[1] == a[2]
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
a = sample(1:6,2,replace = TRUE)
ifelse(a[1] == a[2],"your win","your lose")
unique(vec)
length(unique(vec))
a = c(1:10,1:10)
length(unique(a))
v = c("H","T")
p = c(0.5,0.5)
v = c("H","T")
p = c(0.5,0.5)
sample(size = 6,x = v,prob = p,replace = TRUE)
sample(size = 6,x = v,prob = p,replace = TRUE)
sample(size = 3,x = v,prob = p,replace = T)
v = seq(1,6)
p = rep(1/6,6)
sample(size = 3,x = v,prob = p,replace = T)
sample(size = 3,x = v,prob = p,replace = T)
dnorm(x = 50,mean = 67,sd = 6)
pnorm(80,mean = 67,sd = 6)
qnorm(p = 0.75,mean = 67,sd = 6)
pnorm(71,mean = 67,sd = 6)
rnorm(n = 100,mean = 67,sd = 6)
r1 = rnorm(3000)
plot(density(r1))
r1 = rnorm(3000)
r2 = rnorm(3000)
u1 = runif(3000)
u2 = runif(3000)
x = r1 + r2
plot(density(x))
r1 = rnorm(3000)
r2 = rnorm(3000)
x = r1 + r2
plot(density(x))
shapiro.test(x)
x = r1 * r2
plot(density(x))
shapiro.test(x)
x = r1 + r2
shapiro.test(x)
x = r1 * r2
shapiro.test(x)
x = u1 + u2
shapiro.test(x)
plot(density(x))
x = u1 * u2
plot(density(x))
x = u1 * u2
shapiro.test(x)
u3 = runif(3000)
x = u1 + u2 + u3
shapiro.test(x)
plot(density(x))
u4 = runif(3000)
u5 = runif(3000)
x = u1 + u2 + u3 + u4 + u5
shapiro.test(x)
plot(density(x))
u6 = runif(3000)
x = u1 + u2 + u3 + u4 + u5 + u6
plot(density(x))
shapiro.test(x)
x = u1 + u2 + u3 + u4 + u5 + u6
plot(density(x))
shapiro.test(x)
n=0
a = shapiro.test(x)
a
a[1]
a[2]
while (a>0.05)
{
u = rnorm(3000)
x = x + u
a = shapiro.test(x)
}
n=0
a = 0
while (a>0.05)
{
u = rnorm(3000)
x = x + u
a1 = shapiro.test(x)
a = a[2]
}
a
n=0
a = 0
while (a>0.05)
{
u = rnorm(3000)
x = x + u
a1 = shapiro.test(x)
a = a[2]
}
a
while (a<0.05)
{
u = rnorm(3000)
x = x + u
a1 = shapiro.test(x)
a = a[2]
}
while (a<0.05)
{
u = rnorm(3000)
x = x + u
a1 = shapiro.test(x)
a = a[2]
}
n=0
a = 0
while (a<0.05)
{
u = rnorm(3000)
x = x + u
a1 = shapiro.test(x)
a = a[2]
}
a = a[2];
{
u = rnorm(3000);
x = x + u;
a1 = shapiro.test(x);
a = a[2];
}
while (a<0.05)
{
u = rnorm(3000);
x = x + u;
a1 = shapiro.test(x);
a = a[2];
}
while (a<0.05)
{
u = rnorm(3000);
x = x + u;
a1 = shapiro.test(x);
a = a1[2];
}
n=0
a = 0
while (a<0.05)
{
u = rnorm(3000);
x = x + u;
a1 = shapiro.test(x);
a = a1[2];
}
a
plot(density(x))
n=0
a = 0
while (a<0.05)
{
u = rnorm(3000);
x = x + u;
n = n + 1;
a1 = shapiro.test(x);
a = a1[2];
}
n
a
n=0
a = 0
while (a<0.05)
{
u = runif(3000);
x = x + u;
n = n + 1;
a1 = shapiro.test(x);
a = a1[2];
}
a
n=0
a = 0
while (a<0.05)
{
u = runif(3000);
x = x + u;
n = n + 1;
a1 = shapiro.test(x);
a = a1[2];
}
a
n
x = 0
n = 0
a = 0
while (a<0.05)
{
u = runif(3000);
x = x + u;
n = n + 1;
a1 = shapiro.test(x);
a = a1[2];
}
n
a
plot(density(x))
t1 = rnorm(100000,mean = 5,sd = 3)
t2 = runif(100000,min = 3,max = 7)
plot(density(t2))
t1 = rnorm(100000,mean = 5,sd = 3)
t2 = runif(100000,min = 3,max = 7)
t = t1 + t2
t
plot(density(t2))
plot(density(t))
s1 = t[t<10]
length(s1)
length(s1)/100000
t = ifelse(t1>t2,t1,t2)
plot(density(t))
s1 = t[t<10]
length(s1)/100000
x = rnorm(20,mean = 12,sd = 6)
x
mean(x)
sd(x)
x = rnorm(20,mean = 12,sd = 6)
mean(x)
sd(x)
x = rnorm(20,mean = 12,sd = 6)
mean(x)
sd(x)
x = rnorm(20,mean = 12,sd = 6)
mean(x)
sd(x)
x = rnorm(20,mean = 12,sd = 6)
mean(x)
sd(x)
x = rnorm(20,mean = 12,sd = 6)
mean(x)
sd(x)
x = rnorm(20,mean = 12,sd = 6)
mean(x)
sd(x)

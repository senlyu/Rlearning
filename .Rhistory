library(plyr)
install.packages("plyr")
library(plyr)
library(data.table)
install.packages("data.table")
library(data.table)
train <- fread("C:\Users\SamLyu\Desktop\train.csv\train.csv",header = T)
train <- fread("C:Users\SamLyu\Desktop\train.csv\train.csv",header = T)
train <- fread("C:/SamLyu/Desktop/train.csv/train.csv",header = T)
train <- fread("C:/Users/SamLyu/Desktop/train.csv/train.csv",header = T)
View(train)
library("plyr", lib.loc="~/R/win-library/3.3")
detach("package:plyr", unload=TRUE)
detach("package:data.table", unload=TRUE)
6+9
log(987)
9+6
log(769)
6^5
rnorm()
rnorm(10)
getwd()
setwd("K:\OneDrive - University of Connecticut\Git\Rlearning")
setwd("K:/OneDrive - University of Connecticut/Git/Rlearning")
getwd()
libaray()
library()
library(MASS)
library(help=MASS)
library(help=MASS)
help("whiteside")
library()
rnorm(10)
help("rnorm")
weight=c(60,72,57,90,95,72)
weight
height=c(1.75,1.8,1.65,1.9,1.74,1.91)
mean(weight)
median(height)
sd(height)
median(weight)
a=median(weight)
a
quantile(height,x=75)
quantile(height,x=0.75)
quantile(height,probs = 0.75)
quantile(height,probs=c(0.3,0.5))
length(height)
range(height)
t.test(weight,mu=80)
mean(weight)
bmi=weight/height^2
bmi
plot(height,weight)
plot(height,weight,pch=19,main="first graph")
plot(height,weight,pch=19,
main="first graph",col="orange")
plot(height,weight,pch=19,
main="first graph",col="orange",ylim=c(0,100))
plot(height,weight,pch=1,
main="first graph",col="orange",ylim=c(0,100))
plot(height,weight,pch=18,
main="first graph",col="orange",ylim=c(0,100))
plot(height,weight,pch=1,
main="first graph",col="orange",ylim=c(0,100))
plot(height,weight,pch=2,
main="first graph",col="orange",ylim=c(0,100))
colors()
plot(height,weight,pch=2,
main="first graph",col="salmon4",ylim=c(0,100))
plot(height,weight,pch=3,
main="first graph",col="salmon4",ylim=c(0,100))
weight=c(weight,86)
weight
height=c(height,weight[1])
height
height=height[1:6]
height
height=c(height,NA)
height
mean(weight)
mean(height)
mean(height,na.rm = T)
gender=c("M","F","M","F","F","M","F")
plot(height,weight,pch=3,
main="first graph",col="salmon4",ylim=c(0,100),xlim = c(0,100))
plot(height,weight,pch=3,
main="first graph",col="salmon4",ylim=c(0,100),xlim = c(0,1))
plot(height,weight,pch=3,
main="first graph",col="salmon4",ylim=c(0,100),xlim = c(0,10))
plot(height,weight,pch=3,
main="first graph",col="salmon4",ylim=c(0,100),xlim = c(1,3))
names(gender)
help(names)
names(gender)=c("M","F","M","F","F","M","F")
plot(gender,weight)
plot(factor(gender),weight)
x=seq(1,100,by=7)
y=rep(7,100)
z=rep(c("A","B","C"),100)
zz=rep(c("A","B"),c(4,5))
zz=c(rep("A",4),rep("B",5))
weight[5]
weight[c(2,6)]
weight[1:4]
weight[weight>73]
weight[weight>73]
height[height>1.7&is.na(height)==F]
f=gender=="F"
f
ghw=data.frame(gender,height,weight)
ghw
names(gender)=c("1","2","4","3","5","7","9")
ghw=data.frame(gender,height,weight)
ghw
ghw$height
plot(ghw$height,ghw$weight)
edit(ghw)
ghw$gender[4]="M"
ghw
ghw$gender[4]="F"
edit(ghw)
edit(ghw)
edit(ghw)
View(ghw)
ghw[2,3]
View(ghw)
ghw[2,]
ghw[c(2,4,5),]
ghw[ghw$gender=="M",]
edit(whiteside)
plot(whiteside$Insul,whiteside$Gas)
100:200
str(whiteside)
dim(whiteside)
summary(whiteside)
str(ghw)
str(gender)
class(whiteside)
attributes(whiteside)
edit(Cars93)
data()
data()
View(ghw)
data()
install.packages("ISwR")
install.packages("ISwR")
install.packages("ISwR")
load(ISwR)
library(ISwR)
library(ISwR)
x=seq(-10,10,by = 0.1)
y=sin(x)
plot(x,y,pch=19,xlab = "x value",ylab = "sine",title="Assignment Graph",colors="Orange")
plot(x,y,pch=19,xlab = "x value",ylab = "sine",title="Assignment Graph",color="Orange")
plot(x,y,pch=19,xlab = "x value",ylab = "sine",title="Assignment Graph",col="Orange")
plot(x,y,pch=19,xlab = "x value",ylab = "sine",main="Assignment Graph",col="Orange")
title(main="Assignment Graph")
plot(x,y,pch=19,xlab = "x value",ylab = "sine",col="Orange")
title(main="Assignment Graph")
plot(x,y,pch=19,xlab = "x value",ylab = "sine",main="Assignment Graph",col="Orange")
rep(c("x","y","z"),7)
rep(c("x"&"y","z"),(4,2))
rep(c(c("x","y"),"z"),(4,2))
rep(c(c("x","y"),"z"),c(4,2))
rep(c("x","z"),c(4,2))
rep(c(c("x"),"z"),c(4,2))
rep(c(c("x","y"),"z"),c(4,2))
rep(c("x","y","z"),c(4,2))
rep(c("x""y","z"),c(4,2))
rep(c(c("x","y"),"z"),c(4,2))
i=c("x","y")
rep(c(i,"z"),c(4,2))
rep(c(i,"z"),c(4,4,2))
rep(c(i,"z"),c(4,2))
i="x","y"
rep(c(i,"z"),c(4,2))
rep(c("x","y"),c(4))
c(rep(c("x","y"),c(4)),rep("z",2))
rep(i,1)
rep(i,2)
rep(c(i,"z"),c(4,2))
rep(c(i,"z"),each=2)
plot(x,y,pch=19,xlab = "x value",ylab = "sine",main="Assignment Graph",col="Orange")
rep(c("x","y","z"),7)
c(rep(c("x","y"),c(4)),rep("z",2))
help("INSTALL")
remove.packages("ISwR", lib="~/R/win-library/3.3")
install.packages(ISwR)
install.packages("ISwR")
library(ISwR)
library(ISwR=help)
library(help=ISwR)
help(stroke)
descripe(stroke)
str(stroke)
library(help=ISwR)
str(stroke)
library(ISwR)
library(ISwR)
mean(stroke$age)
median(stroke$age)
percentitle(stroke$age,75)
quantile(stroke$age,probs = 0.75)
t.test(age,var.equal = 71)
t.test(stroke$age,var.equal = 71)
t.test(stroke$age,mu=71)
library(ISwR)
t.test(stroke$age,mu=71)
s1=
str(stroke)
s1=stroke[dead=FALSE]
s1=stroke[dead=F]
s1=stroke[stroke$dead=F]
s1=stroke[stroke$dead==F]
s1=stroke[dead==F]
s1=stroke[stroke$dead==F]
s1=stroke[stroke$dead]

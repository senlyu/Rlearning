library(dplyr)
install.packages("dplyr")
library(dplyr)
library(dplyr)
View(df)
next_de = df[df$Next.Degree=="MS"||df$Next.Degree=="PHD"]
next_de
View(next_de)
next_de = df[df$Next.Degree=="MS"||df$Next.Degree=="PHD",]
View(next_de)
next_de = df[df$Next.Degree=="MS"|df$Next.Degree=="PHD",]
View(next_de)
s1 = df[df$Next.Degree=="MS"|df$Next.Degree=="PHD",]
View(s1)
s2 = df[order(df$Gender,df$Next.Degree)]
s2 = df[order(df$Gender,df$Next.Degree),]
s2
View(s2)
s2 = s1[order(df$Gender,df$Next.Degree),]
View(s2)
View(s1)
s2 = s1[order(df$Gender,df$Next.Degree),]
View(s2)
View(s2)
View(s2)
View(s2)
library(dplyr)
s1 = df[df$Next.Degree=="MS"|df$Next.Degree=="PHD",]
View(s1)
s2 = s1[order(df$Gender,df$Next.Degree),]
s1 = df[df$Next.Degree=="MS"|df$Next.Degree=="PHD",]
df<-read.csv("K:\\OneDrive\\Git\\Rlearning\\contribution.csv",header = T)
df
library(dplyr)
s1 = df[df$Next.Degree=="MS"|df$Next.Degree=="PHD",]
View(s1)
s2 = s1[order(df$Gender,df$Next.Degree),]
View(s2)
s2 = s1[order(s1$Gender,s1$Next.Degree),]
View(s2)
formu1 = df$Next.Degree=="MS"|df$Next.Degree=="PHD"
s1 = filter(df,formu1)
View(s1)
formu1 =
s1 = filter(df,df$Next.Degree=="MS"|df$Next.Degree=="PHD")
s1
View(s1)
s2 = arrage(s1,s1$Gender,s1$Next.Degree)
s2 = arrage(s1,c(s1$Gender,s1$Next.Degree))
s2 = arrange(s1,c(s1$Gender,s1$Next.Degree))
s2 = arrange(s1,s1$Gender,s1$Next.Degree)
s2 = arrange(s1,s1$Gender,s1$Next.Degree)
s2 = arrange(s1,s1$Gender,s1$Next.Degree)
s1 = filter(df,df$Next.Degree=="MS"|df$Next.Degree=="PHD")
s2 = arrange(s1,s1$Gender,s1$Next.Degree)
s2 = arrange(s1,Gender,Next.Degree)
View(s2)
s2 = arrange(s1,s1$Gender,Next.Degree)
s1 = filter(df,Next.Degree=="MS"|Next.Degree=="PHD")
View(s1)
library(help=quakes)
data()
dsq = quakes
dsp
dsq
opar = par()
oar(bg="grey",nfrow=c(1,3),col="blue")
par(bg="grey",nfrow=c(1,3),col="blue")
par(bg="grey",mfrow=c(1,3),col="blue")
plot(dsq$lat,dsq$long)
plot(dsq$depth,dsq$mag)
plot(dsq$stations,dsq$mag)
par(opar)
hist(dsq$mag,prob=T)
hist(dsq$mag,prob=F)
hist(dsq$mag,prob=T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(1,1,"Average mag")
text(2,1,"Average mag")
text(2,2,"Average mag")
text(20,20,"Average mag")
abline(v=mean(dsq$mag),col="red",lwd=3)
text(20,20,"Average mag")
abline(v=mean(dsq$mag),col="red",lwd=3)
text(20,20,"Average mag")
text(5,5,"Average mag",col="red")
abline(v=mean(dsq$mag),col="red",lwd=3)
text(5,5,"Average mag",col="red")
hist(dsq$mag,prob=T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(5,5,"Average mag",col="red")
text(6,6,"Average mag",col="red")
text(5,6,"Average Temp", srt=90)
par(opar)
text(6,6,"Average mag",col="red")
abline(v=mean(dsq$mag),col="red",lwd=3)
abline(v=mean(dsq$mag),col="red",lwd=3)
hist(dsq$mag,prob=T)
hist(dsq$mag,prob=T)
text(6,6,"Average mag",col="red")
text(6,6,"Average mag",col="red")
abline(v=mean(dsq$mag),col="red",lwd=3)
hist(dsq$mag,prob=T)
text(6,6,"Average mag",col="red")
text(0,0,"Average mag",col="red")
dsq = quakes
hist(dsq$mag,prob=T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(0,0,"Average mag",col="red")
text(1,1,"Average mag",col="red")
text(1,1,"Average mag",col="red")
text(9,9,"Average mag",col="red")
text(9,9,labels = "Average mag",col="red")
text(9,labels = "Average mag",col="red")
attach(whiteside)
detach(whiteside)
library(vcd)
library(car)
library(dplyr)
library(MASS)
View(whiteside)
attach(whiteside)
detach(whiteside)
plot(Insul)
plot(Insul,Gas)
attach(whiteside)
plot(Insul)
plot(Insul,Gas)
plot(Temp,Gas)
plot(whiteside)
plot(Temp,Gas,type="p",las=2,cex=2)
abline(h=mean(Gas),col="orange",lwd=3)
abline(v=mean(Temp),col="magenta",lwd=3)
l1 = paste("Mean Gas = ",round(mean(Gas),2))
text(0,4,l1)
detach(whiteside)
l1 = paste("Mean Gas = ",round(mean(Gas),2))
text(0,4,l1)
hist(dsq$mag,prob=T)
l1 = paste("Mean Gas = ",round(mean(dsq$mag),2))
text(0,4,l1)
plot(Temp,Gas,type="p",las=2,cex=2)
plot(dsq$mag)
text(9,labels = "Average mag",col="red")
text(1,labels = "Average mag",col="red")
text(1,1,labels = "Average mag",col="red")
text(1,1,labels = "Average mag",col="red")
text(1,1,labels = "Average mag")
plot(dsq$mag)
plot(dsq$mag)
abline(v=mean(dsq$mag),col="red",lwd=3)
plot(dsq$mag)
text(1,1,labels = "Average mag")
text(1,1,labels = "Average mag",col="red")
text(1,1,labels = "Average mag",col="red",cex = 2)
text(1,1,labels = "Average mag",col="red",cex = 2,font = 1)
text(1,1,labels = "Average mag",col="red",cex = 2,font = 0)
text(1,1,labels = "Average mag",col="red",cex = 2)
dsq = quakes
opar = par()
hist(dsq$mag,prob=T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(1,1,labels = "Average mag",col="red",cex = 2)
text(1,1,labels = "Average mag",col="red",cex = 2)
dsq = quakes
hist(dsq$mag,prob=T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(1,1,labels = "Average mag",col="red",cex = 2)
hist(dsq$mag,prob=T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(1,1,labels = "Average mag",col="red",cex = 2)
hist(dsq$mag)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(1,1,labels = "Average mag",col="red",cex = 2)
hist(dsq$mag,prob= T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(1,1,labels = "Average mag",col="red",cex = 2)
hist(dsq$mag,prob= T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(1,1,labels = "Average mag",col="red",cex = 2)
text(1,1,labels = "Average mag",col="red")
label1 = paste("Avg Temp = ",mean(dsq$mag))
text(1,1,label1,col="red")
dsq = quakes
hist(dsq$mag,prob= T)
abline(v=mean(dsq$mag),col="red",lwd=3)
label1 = paste("Avg Temp = ",mean(dsq$mag))
text(1,1,label1,col="red")
dsq = quakes
hist(dsq$mag,prob= T)
abline(v=mean(dsq$mag),col="red",lwd=3)
label1 = paste("Avg Temp = ",mean(dsq$mag))
text(1,1,label1,col="red")
library(vcd)
library(car)
library(dplyr)
library(MASS)
attach(whiteside)
plot(Insul)
plot(Insul,Gas)
plot(Temp,Gas)
plot(whiteside)
plot(Temp,Gas,type="p",las=2,cex=2)
abline(h=mean(Gas),col="orange",lwd=3)
abline(v=mean(Temp),col="magenta",lwd=3)
l1 = paste("Mean Gas = ",round(mean(Gas),2))
text(0,4,l1)
l2 = paste("Mean Temp = ",mean(Temp))
text(5,5,l2,srt=90)
hist(dsq$mag,prob= T)
l1 = paste("Mean Gas = ",round(mean(Gas),2))
text(0,4,l1)
l2 = paste("Mean Temp = ",mean(Temp))
text(5,5,l2,srt=90)
plot(dsq$depth,dsq$mag)
label1 = paste("Avg Temp = ",mean(dsq$mag))
text(1,1,label1,col="red")
plot(Temp,Gas,type="p",las=2,cex=2)
abline(h=mean(Gas),col="orange",lwd=3)
abline(v=mean(Temp),col="magenta",lwd=3)
l1 = paste("Mean Gas = ",round(mean(Gas),2))
text(0,4,l1)
l2 = paste("Mean Temp = ",mean(Temp))
text(5,5,l2,srt=90)
hist(dsq$mag,prob= T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(1,1,l1,col="red")
text(1,1,l1,col="red")
text(0,l1,col="red")
text(0,l2,col="red")
text(0,l2")
text(0,l2)
text(0,l2)
quit()
qwe231
123
12
321
243
123
432
21
43
1243
1243
""
text(0,l2)
dsq = quakes
hist(dsq$mag,prob= T)
abline(v=mean(dsq$mag),col="red",lwd=3)
label1 = paste("Avg Temp = ",mean(dsq$mag))
text(0,l2)
plot(Temp,Gas,type="p",las=2,cex=2)
abline(h=mean(Gas),col="orange",lwd=3)
abline(v=mean(Temp),col="magenta",lwd=3)
l1 = paste("Mean Gas = ",round(mean(Gas),2))
text(0,4,l1)
l2 = paste("Mean Temp = ",mean(Temp))
hist(dsq$mag,prob= T,type="p")
abline(v=mean(dsq$mag),col="red",lwd=3)
label1 = paste("Avg Temp = ",mean(dsq$mag))
text(0,l2)
hist(dsq$mag,prob= T,type="p")
abline(v=mean(dsq$mag),col="red",lwd=3)
label1 = paste("Avg Temp = ",mean(dsq$mag))
text(0,l2)
hist(dsq$mag)
abline(v=mean(dsq$mag),col="red",lwd=3)
label1 = paste("Avg Temp = ",mean(dsq$mag))
text(0,l2)
l1 = paste("Mean Gas = ",round(mean(Gas),2))
text(0,4,l1)
l2 = paste("Mean Temp = ",mean(Temp))
text(5,5,l2,srt=90)
text(5,1,l2)
text(4,l2)
hist(dsq$mag,prob= T)
abline(v=mean(dsq$mag),col="red",lwd=3)
label1 = paste("Avg Temp = ",mean(dsq$mag))
text(4,l2)
text(4,0.2,l2)
text(4.5,0.2,l2)
text(4.5,0.2,l2,srt=90)
text(4.7,0.2,l2,srt=90)
hist(dsq$mag,prob= T)
abline(v=mean(dsq$mag),col="red",lwd=3)
label1 = paste("Avg Temp = ",mean(dsq$mag))
text(4.7,0.2,l2,srt=90)
text(4.7,0.2,paste("Avg Temp = ",mean(dsq$mag)),srt=90)
hist(dsq$mag,prob= T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(4.7,0.2,paste("Avg Temp = ",mean(dsq$mag)),srt=90)
text(4.7,0.2,paste("Avg Mag = ",mean(dsq$mag)),srt=90)
df<-read.csv("K:\\OneDrive\\Git\\Rlearning\\contribution.csv",header = T)
table1 = table(df$Gender,df$Marital.Status)
table2 = prop.table(table1)
pt1 = prop.table(table1,margin = 2)
answer1 = pt1["M","D"]
answer1
answer1 = paste(pt1["M","D"]*100,"%")
answer1
answer2 = paste(pt2["F","S"]*100,"%")
pt2 = prop.table(table1)
answer2 = paste(pt2["F","S"]*100,"%")
pt3 = table1
pt3 = table1
answer3 = names(which.max(table1["F",]))
answer3
fy4t = aggregate(df$FY04Giving,list(df$Marital.Status,df$Gender),median)
sortedfy4t = fy4t[order(fy4t$x,decreasing = T),]
answer4 = head(sortedfy4t,2)
answer4
answer4
answer5
cyear = cut(df$Class.Year,c(-Inf,1980,Inf))
fy3t = aggregate(df$FY03Giving,list(cyear,df$Gender),mean)
sortedfy3t = fy3t[order(fy3t$x),]
answer5
answer5 = head(sortedfy3t,1)
answer5
library(dplyr)
s1 = df[df$Next.Degree=="MS"|df$Next.Degree=="PHD",]
s1 = filter(df,Next.Degree=="MS"|Next.Degree=="PHD")
View(s1)
dsq = quakes
opar = par()
par(bg="grey",mfrow=c(1,3),col="blue")
plot(dsq$lat,dsq$long)
plot(dsq$depth,dsq$mag)
plot(dsq$stations,dsq$mag)
par(opar)
hist(dsq$mag,prob= T)
abline(v=mean(dsq$mag),col="red",lwd=3)
text(4.7,0.2,paste("Avg Mag = ",mean(dsq$mag)),srt=90)
library(vcd)
library(car)
library(MASS)
View(whiteside)
hist(whiteside$Gas)
hist(whiteside$Gas)
density(whiteside$Gas)
plot(density(whiteside$Gas))
hist(whiteside$Gas)
plot(density(whiteside$Gas))
polygon(density(whiteside$Gas))
polygon(density(whiteside$Gas),col="green")
View(Salaries)
symbols(Salaries$yrs.service,Salaries$salary,
circles = Salaries$yrs.since.phd)
symbols(Salaries$yrs.service,Salaries$salary,
circles = Salaries$yrs.since.phd,inches = 0.1,bg = "red")
symbols(Salaries$yrs.service,Salaries$salary,
squares = Salaries$yrs.since.phd,inches = 0.1,bg = "red")
symbols(Salaries$yrs.service,Salaries$salary,
stars = Salaries$yrs.since.phd,inches = 0.1,bg = "red")
symbols(Salaries$yrs.service,Salaries$salary,
stars = Salaries$yrs.since.phd,inches = 0.1,bg = "red")
symbols(Salaries$yrs.service,Salaries$salary,
circles = Salaries$yrs.since.phd,inches = 0.1,bg = "red")
y = UScereal[,c(3,4)]
View(y)
y = UScereal[,3:4]
View(y)
View(y)
y = as.matrix(UScereal[,3:4])
View(y)
symbols(UScereal$sugars,UScereal$calories
rectangles = y,inches = 0.1,bg = "red")
symbols(UScereal$sugars,UScereal$calories,
rectangles = y,inches = 0.1,bg = "red")
symbols(UScereal$sugars,UScereal$calories,
rectangles = y,bg = "red")
symbols(UScereal$sugars,UScereal$calories,
rectangles = y,inches = 0.4, bg = "red")
symbols(UScereal$sugars,UScereal$calories,
rectangles = y,inches = 0.4, bg = "red")
symbols(UScereal$sugars,UScereal$calories,
rectangles = y1,inches = 0.4, bg = "red")
y1 = UScereal[,3:4]
symbols(UScereal$sugars,UScereal$calories,
rectangles = y1,inches = 0.4, bg = "red")
y = as.matrix(UScereal[,3:4])
View(y)
View(y)
x1 = rnorm(10000)
y1 = rnorm(10000)
plot(x1,y1)
smoothScatter(x1,y1)
x2 = runif(10000)
y2 = runif(10000)
smoothScatter(x2,y2)
sunflowerplot(Boston$ptratio,Boston$tax)
View(Boston)
packages.install("rgl")
install.packages("rgl")
library(rgl)
plot3d(Boston$crim,Boston$indus,Boston$age,col = "red")
plot3d(Boston$crim,Boston$indus,Boston$age,col = "red", size = 4)
install.packages("plotrix")
library(plotrix)
library(plotrix)
l1 = c("US","UK","G","F")
v1 = c(123,124,156,153)
pie(l1,v1)
pie(v1,l1)
pie(v1,l1,col = rainbow)
pie(v1,l1,col = rainbow(4))
fan.plot(v1,l1)
fan.plot(x = v1, labels = l1)
fan.plot(x = v1, labels = l1, col = rainbow(4))
fan.plot(x = v1, labels = l1, col = rainbow(5))
fan.plot(x = v1, labels = l1, col = rainbow(3))
fan.plot(x = v1, labels = l1, col = rainbow(2))
fan.plot(x = v1, labels = l1, col = rainbow(6))
fan.plot(x = v1, labels = l1, col = rainbow(4))
v1 = c(43,124,156,153)
fan.plot(x = v1, labels = l1, col = rainbow(4))
v1 = c(43,124,134,153)
fan.plot(x = v1, labels = l1, col = rainbow(4))
v1 = c(43,124,134,180)
fan.plot(x = v1, labels = l1, col = rainbow(4))
install.packages("vioplot")
library(vioplot)
vioplot(whiteside$Gas)
install.packages("corrgram")
library(corrgram)
cor(Boston)
corrgram(Boston)
corrgram(Boston,order = T)
corrgram(Boston,order = F)
corrgram(Boston,order = F)
corrgram(Boston,order = T)
corrgram(Boston,order = T,upper.panel = panel.pie)
Numer<- read.csv("K:\OneDrive\Git\Rlearning\NumericPred.csv")
Numer<- read.csv("K:\\OneDrive\\Git\\Rlearning\\NumericPred.csv")
View(Numer)
a = Numer$target
m = Number$model1
m = Numer$model1
a = Numer$target
m = Numer$model1
colnames(Numer)=c("target","model1","model2")
a = Numer$target
m = Numer$model1
metrics
metrics = c(MAD=0,MSE=0,MAPE=0,MPSE=0,R2=0,TMAD=0)
metrics
metrics["MAD"] = mean(abs(a-m))
metrics
metrics["MSE"] = mean(sqr(a-m))
metrics["MSE"] = mean((a-m)^2)
metrics
metrics["MAPE"] = mean(abs((a-m)/a))
metrics
metrics["MPSE"] = mean(((a-m)/a)^2)
metrics
metrics["TMAD"] = mean(abs(a-m),trim = 0.05)
metrics
quantitle(metrics["TMAD"],probs = 0.05)
quantile(metrics["TMAD"],probs = 0.05)
quantile(metrics["TMAD"],probs = 0.95)
metrics["TMAD"] = mean(abs(a-m))
quantile(metrics["TMAD"],probs = 0.95)
quantile(metrics["TMAD"],probs = 0.05)
metrics["R2"] = 1-(a-mean(a))^2/(a-m)^2
metrics["R2"] = 1-sum((a-mean(a))^2)/sum((a-m)^2)
metrics
metrics["R2"] = 1-sum((a-m)^2)/sum((a-mean(a))^2)
metrics
View(metrics["TMAD"])
quantile(abs(a-m),probs=0.05)
quantile(abs(a-m),probs=0.95)
tmad = abs(a-m)
tmad
View(tmad0
View(tmad)
View(tmad)
tmad[tmad>quantile(abs(a-m),probs=0.95)]
metrics["TMAD"] = mean(tmad[tmad<quantile(abs(a-m),probs=0.95)])
metrics
metrics["TMAD"] = mean(abs(a-m))
metrics
metrics["TMAD"] = mean(abs(a-m),trim = 0.05)
metrics
tmad = abs(a-m)
metrics["TMAD"] = mean(tmad[tmad<quantile(abs(a-m),probs=0.95)])
metrics["R2"] = 1-sum((a-m)^2)/sum((a-mean(a))^2)
metrics
f1 = function(a,m)
{
metrics = c(MAD=0,MSE=0,MAPE=0,MPSE=0,R2=0,TMAD=0)
metrics["MAD"] = mean(abs(a-m))
metrics["MSE"] = mean((a-m)^2)
metrics["MAPE"] = mean(abs((a-m)/a))
metrics["MPSE"] = mean(((a-m)/a)^2)
#metrics["TMAD"] = mean(abs(a-m),trim = 0.05)
# TODO: find a function to get only 95% good TMAD
tmad = abs(a-m)
metrics["TMAD"] = mean(tmad[tmad<quantile(abs(a-m),probs=0.95)])
metrics["R2"] = 1-sum((a-m)^2)/sum((a-mean(a))^2)
return(metrics)
}
asd = f1(a,m)
asd
asd = f1(Numer$target,Numer$model2)
asd
dump('f1',file = 'myfunctions.R')
getwd()
setwd("K:\\OneDrive\\Git\\Rlearning")
getwd()
dump('f1',file = 'myfunctions.R')
dump('f1',file = 'myfunctions.R')
